{
  "runtime": "Default",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"swagger\": \"2.0\",\r\n  \"basePath\": \"/api\",\r\n  \"paths\": {\r\n    \"/0/buckets/\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Get dict {bucket_name: Bucket} of all buckets\",\r\n        \"operationId\": \"get_buckets_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"delete\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Delete a bucket\",\r\n        \"operationId\": \"delete_bucket_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"Needs to be =1 to delete a bucket it non-testing mode\",\r\n            \"name\": \"force\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      },\r\n      \"post\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Create bucket\",\r\n        \"description\": \"Returns True if successful, otherwise false if a bucket with the given ID already existed.\",\r\n        \"operationId\": \"post_bucket_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"payload\",\r\n            \"required\": true,\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CreateBucket\"\r\n            }\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      },\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Bucket\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Get metadata about bucket\",\r\n        \"operationId\": \"get_bucket_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}/events\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Event\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Get events from a bucket\",\r\n        \"operationId\": \"get_events_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"End date of events\",\r\n            \"name\": \"end\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"Start date of events\",\r\n            \"name\": \"start\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"the maximum number of requests to get\",\r\n            \"name\": \"limit\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      },\r\n      \"post\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Create events for a bucket\",\r\n        \"description\": \"Can handle both single events and multiple ones.\\n\\nReturns the inserted event when a single event was inserted, otherwise None.\",\r\n        \"operationId\": \"post_events_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"payload\",\r\n            \"required\": true,\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Event\"\r\n            }\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}/events/count\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"type\": \"integer\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Get eventcount from a bucket\",\r\n        \"operationId\": \"get_event_count_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"End date of eventcount\",\r\n            \"name\": \"end\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"Start date of eventcount\",\r\n            \"name\": \"start\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}/events/{event_id}\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"name\": \"event_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"delete\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Delete a single event from a bucket\",\r\n        \"operationId\": \"delete_event_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}/export\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Export\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Export a bucket to a dataformat consistent across versions, including all events in it\",\r\n        \"operationId\": \"get_bucket_export_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/buckets/{bucket_id}/heartbeat\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"bucket_id\",\r\n          \"in\": \"path\",\r\n          \"required\": true,\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"post\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Heartbeats are useful when implementing watchers that simply keep\",\r\n        \"description\": \"track of a state, how long it's in that state and when it changes.\\nA single heartbeat always has a duration of zero.\\n\\nIf the heartbeat was identical to the last (apart from timestamp), then the last event has its duration updated.\\nIf the heartbeat differed, then a new event is created.\\n\\nSuch as:\\n - Active application and window title\\n   - Example: aw-watcher-window\\n - Currently open document/browser tab/playing song\\n   - Example: wakatime\\n   - Example: aw-watcher-web\\n   - Example: aw-watcher-spotify\\n - Is the user active/inactive?\\n   Send an event on some interval indicating if the user is active or not.\\n   - Example: aw-watcher-afk\\n\\nInspired by: https://wakatime.com/developers#heartbeats\",\r\n        \"operationId\": \"post_heartbeat_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"payload\",\r\n            \"required\": true,\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Event\"\r\n            }\r\n          },\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"Largest timewindow allowed between heartbeats for them to merge\",\r\n            \"name\": \"pulsetime\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/export\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Export\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Exports all buckets and their events to a format consistent across versions\",\r\n        \"operationId\": \"get_export_all_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/import\": {\r\n      \"post\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"operationId\": \"post_import_all_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"payload\",\r\n            \"required\": true,\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Export\"\r\n            }\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/info\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Info\"\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Get server info\",\r\n        \"operationId\": \"get_info_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"X-Fields\",\r\n            \"in\": \"header\",\r\n            \"type\": \"string\",\r\n            \"format\": \"mask\",\r\n            \"description\": \"An optional fields mask\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/log\": {\r\n      \"get\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"summary\": \"Get the server log in json format\",\r\n        \"operationId\": \"get_log_resource\",\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    },\r\n    \"/0/query/\": {\r\n      \"post\": {\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        },\r\n        \"operationId\": \"post_query_resource\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"payload\",\r\n            \"required\": true,\r\n            \"in\": \"body\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Query\"\r\n            }\r\n          },\r\n          {\r\n            \"in\": \"query\",\r\n            \"description\": \"Name of the query (required if using cache)\",\r\n            \"name\": \"name\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"tags\": [\r\n          \"default\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"info\": {\r\n    \"title\": \"API\",\r\n    \"version\": \"1.0\"\r\n  },\r\n  \"produces\": [\r\n    \"application/json\"\r\n  ],\r\n  \"consumes\": [\r\n    \"application/json\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"default\",\r\n      \"description\": \"Default namespace\"\r\n    }\r\n  ],\r\n  \"definitions\": {\r\n    \"Info\": {\r\n      \"properties\": {\r\n        \"hostname\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"version\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"testing\": {\r\n          \"type\": \"boolean\"\r\n        },\r\n        \"device_id\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"type\": \"object\"\r\n    },\r\n    \"CreateBucket\": {\r\n      \"required\": [\r\n        \"client\",\r\n        \"hostname\",\r\n        \"type\"\r\n      ],\r\n      \"properties\": {\r\n        \"client\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"hostname\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"type\": \"object\"\r\n    },\r\n    \"Bucket\": {\r\n      \"$id\": \"https://activitywatch.net/schemas/bucket.v0.json\",\r\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n      \"title\": \"Bucket\",\r\n      \"description\": \"The Bucket model that is used in ActivityWatch\",\r\n      \"type\": \"object\",\r\n      \"required\": [\r\n        \"id\",\r\n        \"type\",\r\n        \"client\",\r\n        \"hostname\"\r\n      ],\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"description\": \"The unique id for the bucket\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"name\": {\r\n          \"description\": \"The readable and renameable name for the bucket\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"type\": {\r\n          \"description\": \"The event type\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"client\": {\r\n          \"description\": \"The name of the client that is reporting to the bucket\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"hostname\": {\r\n          \"description\": \"The hostname of the machine on which the client is running\",\r\n          \"type\": \"string\"\r\n        },\r\n        \"created\": {\r\n          \"description\": \"The creation datetime of the bucket\",\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"data\": {\r\n          \"description\": \"\",\r\n          \"type\": \"object\"\r\n        },\r\n        \"events\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/Event\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"Event\": {\r\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n      \"title\": \"Event\",\r\n      \"description\": \"The Event model that is used in ActivityWatch\",\r\n      \"type\": \"object\",\r\n      \"required\": [\r\n        \"timestamp\"\r\n      ],\r\n      \"properties\": {\r\n        \"timestamp\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"duration\": {\r\n          \"type\": \"number\"\r\n        },\r\n        \"data\": {\r\n          \"type\": \"object\"\r\n        }\r\n      }\r\n    },\r\n    \"Query\": {\r\n      \"required\": [\r\n        \"query\",\r\n        \"timeperiods\"\r\n      ],\r\n      \"properties\": {\r\n        \"timeperiods\": {\r\n          \"type\": \"array\",\r\n          \"description\": \"List of periods to query\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"query\": {\r\n          \"type\": \"array\",\r\n          \"description\": \"String list of query statements\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        }\r\n      },\r\n      \"type\": \"object\"\r\n    },\r\n    \"Export\": {\r\n      \"$id\": \"https://activitywatch.net/schemas/export.v0.json\",\r\n      \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n      \"title\": \"Export\",\r\n      \"description\": \"The Export model that is used by ActivityWatch\",\r\n      \"type\": \"object\",\r\n      \"required\": [],\r\n      \"properties\": {\r\n        \"buckets\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/Bucket\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"responses\": {\r\n    \"ParseError\": {\r\n      \"description\": \"When a mask can't be parsed\"\r\n    },\r\n    \"MaskError\": {\r\n      \"description\": \"When any error occurs on mask\"\r\n    }\r\n  }\r\n}",
      "url": "http://localhost:5600/api/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": "",
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": false,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "AWApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "internal",
      "typeAccessModifier": "internal",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "yyyy-MM-ddTHH:mm:ssK",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "Client",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": true,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": true,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "AWResponse",
      "namespace": "At.Lagg.ActivityWatchVS2022.API.V1",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Record",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": true,
      "generateNullableReferenceTypes": true,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "checksumCacheEnabled": false,
      "serviceHost": "",
      "serviceSchemes": null,
      "output": "Generated.cs",
      "newLineBehavior": "Auto"
    }
  }
}